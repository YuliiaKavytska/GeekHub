{"version":3,"sources":["store/todoReducer.js","components/Item.jsx","webSocket.js","components/Main.jsx","components/Footer.jsx","store/index.js","components/Header.jsx","App.jsx","reportWebVitals.js","index.js","components/Header.module.css"],"names":["toDoSlice","createSlice","name","initialState","list","lastTask","countOfActiveTasks","filter","filterResult","error","reducers","setTodos","state","action","payload","e","status","length","changeItemStatus","element","findIndex","id","changeEditing","case","editing","setChangedTask","map","task","changeItemTask","addItem","push","deleteItem","deleteCompleted","changeLastTask","completedAll","every","item","some","forEach","changeFilter","el","setErrorResponse","getUsersTC","editingMode","dispatch","ajax","then","response","resultPromise","json","data","message","url","method","body","settings","headers","Object","keys","JSON","stringify","fetch","actions","Item","changeEditingCall","changeItemStatusCall","deleteItemCall","changeItemTaskCall","input","React","createRef","useCallback","currentTarget","value","changeEditingBlurCase","useEffect","current","focus","className","undefined","onDoubleClick","type","checked","onChange","onClick","onInput","onBlur","ref","socket","io","Main","useSelector","toDo","useDispatch","useParams","num","edit","Number","on","success","completedAllCall","emit","itemCase","htmlFor","Footer","completeAll","activeClassName","to","rootReducer","combineReducers","reducer","middleware","getDefaultMiddleware","thunk","store","configureStore","window","Header","onKey","key","Input","target","s","header","placeholder","onKeyPress","autoFocus","App","path","render","MainApp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.53336de0.chunk.js","sourcesContent":["import {createSlice} from '@reduxjs/toolkit';\r\n\r\nexport const toDoSlice = createSlice({\r\n    name: 'list',\r\n    initialState: {\r\n        list: [],\r\n        lastTask: '',\r\n        countOfActiveTasks: 0,\r\n        filter: 'all',\r\n        filterResult: [],\r\n        error: null\r\n    },\r\n    reducers: {\r\n        setTodos: (state, action) => {\r\n            state.list = action.payload.list;\r\n            state.lastTask = action.payload.lastTask;\r\n            state.filterResult = action.payload.list;\r\n            state.countOfActiveTasks = action.payload.list.filter(e => e.status === 'active').length;\r\n            state.error = null;\r\n        },\r\n        changeItemStatus: (state, action) => {\r\n            let element = state.list.findIndex(e => e.id === action.payload.id);\r\n            state.list[element].status === 'active'\r\n                ? state.list[element].status = 'completed'\r\n                : state.list[element].status = 'active';\r\n            state.countOfActiveTasks = state.list.filter(e => e.status === 'active').length;\r\n            state.filterResult = state.list;\r\n            state.filter = 'all';\r\n            state.error = null;\r\n        },\r\n        changeEditing: (state, action) => {\r\n            let element = state.list.findIndex(e => e.id === action.payload.id);\r\n            // рассматриваем случай. мы тыкнули в другом месте или сделали двойной клик?\r\n            // если в другом месте, то это false, а если двойной то нулл\r\n            // если мы тыкнули два раза, тогда мы меняем статус редактирования\r\n            // но если мы тыкнули в другом месте то в этом лучаем мы ВСЕГДА просто ВЫКЛЮЧАЕМ редактирование\r\n            action.payload.case === false\r\n                ? state.list[element].editing = false\r\n                : state.list[element].editing = !state.list[element].editing;\r\n            state.filterResult = state.list;\r\n        },\r\n        setChangedTask: (state, action) => {\r\n            state.list = state.list.map(e => e.id === action.payload.id ? {...e, task: action.payload.task} : e);\r\n            state.filterResult = state.list;\r\n        },\r\n        changeItemTask: (state, action) => {\r\n            let element = state.list.findIndex(e => e.id === action.payload.id);\r\n            state.list[element].task = action.payload.task;\r\n            state.filterResult = state.list;\r\n            state.error = null;\r\n        },\r\n        addItem: (state, action) => {\r\n            if (state.lastTask !== '') {\r\n                let id = state.list.length > 0 ? state.list[state.list.length - 1].id + 1 : 1;\r\n                state.list.push({id: id, task: action.payload.task, status: 'active', editing: false});\r\n                state.lastTask = '';\r\n                state.countOfActiveTasks += 1;\r\n                state.filterResult = state.list;\r\n                state.filter = 'all';\r\n            }\r\n            state.error = null;\r\n        },\r\n        deleteItem: (state, action) => {\r\n            state.list = state.list.filter(e => e.id !== action.payload.id);\r\n            state.countOfActiveTasks = state.list.filter(e => e.status === 'active').length;\r\n            state.filterResult = state.list;\r\n            state.filter = 'all';\r\n            state.error = null;\r\n        },\r\n        deleteCompleted: state => {\r\n            state.list = state.list.filter(e => e.status !== 'completed');\r\n            state.filterResult = state.list;\r\n            state.error = null;\r\n        },\r\n        changeLastTask: (state, action) => {\r\n            state.lastTask = action.payload.task;\r\n        },\r\n        completedAll: state => {\r\n            if (state.list.every(item => item.status === 'active') ||\r\n                state.list.some(item => item.status === 'active')) {\r\n                state.list.forEach((item) => {\r\n                    item.status = 'completed';\r\n                });\r\n                state.countOfActiveTasks = 0;\r\n            } else {\r\n                state.list.forEach((item) => {\r\n                    item.status = 'active';\r\n                });\r\n                state.countOfActiveTasks = state.list.length;\r\n            }\r\n            state.filterResult = state.list;\r\n            state.error = null;\r\n        },\r\n        changeFilter: (state, action) => {\r\n            switch (action.payload.filter) {\r\n                case 'all' :\r\n                    state.filterResult = state.list;\r\n                    state.filter = 'all';\r\n                    break;\r\n                case 'active' :\r\n                    state.filterResult = state.list.filter(el => el.status !== 'completed');\r\n                    state.filter = 'active';\r\n                    break;\r\n                case 'completed' :\r\n                    state.filterResult = state.list.filter(el => el.status !== 'active');\r\n                    state.filter = 'completed';\r\n                    break;\r\n                case 'item' :\r\n                    state.filterResult = state.list.filter(el => el.id === action.payload.id);\r\n                    state.filter = 'all';\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n            state.countOfActiveTasks = state.list.filter(el => el.status === 'active').length;\r\n            state.error = null;\r\n        },\r\n        setErrorResponse: (state, action) => {\r\n            state.error = action.payload.error;\r\n        }\r\n    }\r\n});\r\n\r\nexport const getUsersTC = (filter, id = null, editingMode = null) => (dispatch) => {\r\n    ajax('/api/all', 'GET').then(response => {\r\n        const resultPromise = response.json();\r\n        if (response.status === 200) {\r\n            resultPromise.then(data => {\r\n                dispatch(setTodos({list: data.list, lastTask: data.lastTask}));\r\n                dispatch(changeFilter({filter, id}));\r\n                if (editingMode) dispatch(changeEditing({id}))\r\n            })\r\n        } else {\r\n            resultPromise.then(data => {\r\n                dispatch(setErrorResponse({error: data.message}));\r\n            })\r\n        }\r\n    });\r\n}\r\n\r\nlet ajax = (url, method, body = {}) => {\r\n    let settings = {\r\n        method,\r\n        headers: {\"X-Requested-With\": \"XMLHttpRequest\", \"Content-Type\": \"application/json\"}\r\n    }\r\n    if (Object.keys(body).length !== 0) {\r\n        settings['body'] = JSON.stringify(body)\r\n    }\r\n    return fetch(url, settings);\r\n}\r\n\r\nexport const {\r\n    setTodos,\r\n    changeItemStatus,\r\n    changeItemTask,\r\n    changeEditing,\r\n    setChangedTask,\r\n    addItem,\r\n    deleteItem,\r\n    deleteCompleted,\r\n    changeLastTask,\r\n    completedAll,\r\n    changeFilter,\r\n    setErrorResponse\r\n} = toDoSlice.actions\r\n","import React, {useCallback, useEffect} from 'react';\r\n\r\nconst Item = ({item, changeEditingCall, changeItemStatusCall, deleteItemCall, changeItemTaskCall}) => {\r\n\r\n    const input = React.createRef();\r\n\r\n    const changeEditing = useCallback((e) => {\r\n        changeEditingCall(item.id, null, e.currentTarget.value, item.editing);\r\n    }, [changeEditingCall, item]);\r\n\r\n    const changeItemStatus = useCallback(() => {\r\n        changeItemStatusCall(item.id);\r\n    }, [changeItemStatusCall, item]);\r\n\r\n    const deleteItem = useCallback(() => {\r\n        deleteItemCall(item.id)\r\n    }, [deleteItemCall, item]);\r\n\r\n    const changeItemTask = useCallback((e) => {\r\n        changeItemTaskCall(item.id, e.currentTarget.value)\r\n    }, [changeItemTaskCall, item]);\r\n\r\n    const changeEditingBlurCase = useCallback((e) => {\r\n        // это случай нажатия в другом месте.\r\n        changeEditingCall(item.id, false, e.currentTarget.value, item.editing)\r\n    }, [changeEditingCall, item]);\r\n\r\n    useEffect(() => {\r\n        if (input.current) input.current.focus();\r\n    }, [input]);\r\n\r\n    return <li className={item.status === 'completed'\r\n        ? (item.editing ? 'completed editing' : 'completed')\r\n        : (item.editing ? 'editing' : undefined)}\r\n               onDoubleClick={changeEditing}>\r\n        <div className=\"view\">\r\n            <input className=\"toggle\"\r\n                   type=\"checkbox\"\r\n                   checked={item.status === \"completed\"}\r\n                   onChange={changeItemStatus}\r\n            />\r\n            <label>{item.task}</label>\r\n            <button className=\"destroy\"\r\n                    onClick={deleteItem}>\r\n            </button>\r\n        </div>\r\n        <input className=\"edit\"\r\n               value={item.task}\r\n               onInput={changeItemTask}\r\n               onBlur={changeEditingBlurCase}\r\n               ref={input}/>\r\n    </li>\r\n}\r\n\r\nexport default Item;","import io from \"socket.io-client\";\r\n\r\nconst socket = io(\"http://localhost:8000/\"); // для подключения к сеерверу\r\n\r\nexport default socket;","import React, {useCallback, useEffect} from 'react';\r\nimport {\r\n    changeEditing,\r\n    changeItemStatus,\r\n    changeItemTask,\r\n    completedAll,\r\n    deleteItem,\r\n    getUsersTC, setChangedTask,\r\n    setErrorResponse\r\n} from \"../store/todoReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useParams} from 'react-router-dom';\r\nimport Item from \"./Item\";\r\nimport socket from \"../webSocket\";\r\n\r\nconst Main = () => {\r\n    const {filterResult} = useSelector(state => state.toDo);\r\n    const dispatch = useDispatch();\r\n\r\n    const {filter, num, edit} = useParams();\r\n\r\n    useEffect(() => {\r\n        switch (filter) {\r\n            case 'todo':\r\n                if (num && !edit) {\r\n                    dispatch(getUsersTC('item', Number(num)));\r\n                } else if (num && edit) {\r\n                    dispatch(getUsersTC('item', Number(num), true));\r\n                } else {\r\n                    dispatch(getUsersTC('all'));\r\n                }\r\n                break;\r\n            case undefined:\r\n                dispatch(getUsersTC('all'));\r\n                break;\r\n            default:\r\n                dispatch(getUsersTC(filter));\r\n        }\r\n    }, [dispatch, edit, num, filter]);\r\n\r\n    useEffect(() => {\r\n        socket.on('all:wasCompleted', ({success, ...data}) => {\r\n            success\r\n                ? dispatch(completedAll())\r\n                : dispatch(setErrorResponse({error: data.message}));\r\n        });\r\n\r\n        socket.on('todo:wasDeleted', ({id, success, ...data}) => {\r\n            success\r\n                ? dispatch(deleteItem({id}))\r\n                : dispatch(setErrorResponse({error: data.message}));\r\n        });\r\n\r\n        socket.on('todoStatus:wasChanged', ({id, success, ...data}) => {\r\n            success\r\n                ? dispatch(changeItemStatus({id}))\r\n                : dispatch(setErrorResponse({error: data.message}));\r\n        });\r\n\r\n        socket.on('todo:wasChanged', ({success, id, task, ...data}) => {\r\n            success\r\n                // если прилетает запрос, что кто-то изменил задание, и этот запрос был удачный, тогда мы изменяем задание у нас\r\n                ? dispatch(setChangedTask({id, task}))\r\n                : dispatch(setErrorResponse({error: data.message}));\r\n        })\r\n    }, [dispatch]);\r\n\r\n    const completedAllCall = useCallback(() => {\r\n        socket.emit('all:complete');\r\n    }, []);\r\n\r\n    const deleteItemCall = useCallback((id) => {\r\n        socket.emit('todo:delete', id);\r\n    }, []);\r\n\r\n    const changeItemStatusCall = useCallback((id) => {\r\n        socket.emit('todoStatus:change', id);\r\n    }, []);\r\n\r\n    const changeEditingCall = useCallback((id, itemCase, task, editing) => {\r\n        // мы передаем статус редактирования (editing), чтобы понять, мы его в данный момент выключаем или включаем\r\n        // если мы его включаем тогда просто меняем статус редактирования (на влючено)\r\n        //  но если мы его выключаем то тогда мы делаем запрос на изменения данных на сервере (сохранение)\r\n        if (editing) {\r\n            // посылаем запрос на изменение задания в базе и это изменение получат все\r\n            socket.emit('todo:change', {id, task});\r\n            // выключаем редактирование у себя\r\n            dispatch(changeEditing({id, case: itemCase}));\r\n        } else {\r\n            dispatch(changeEditing({id, case: itemCase}));\r\n        }\r\n    }, [dispatch]);\r\n\r\n    const changeItemTaskCall = useCallback((id, task) => {\r\n        dispatch(changeItemTask({id, task}));\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <section className=\"main\">\r\n            <input id=\"toggle-all\"\r\n                   className=\"toggle-all\"\r\n                   type=\"checkbox\"\r\n                   onClick={completedAllCall}\r\n            />\r\n            <label htmlFor=\"toggle-all\"> Mark all as complete\r\n            </label>\r\n            <ul className=\"todo-list\">\r\n                {filterResult.map((item) => (\r\n                    <Item key={item.id}\r\n                          item={item}\r\n                          changeEditingCall={changeEditingCall}\r\n                          changeItemStatusCall={changeItemStatusCall}\r\n                          deleteItemCall={deleteItemCall}\r\n                          changeItemTaskCall={changeItemTaskCall}/>\r\n                ))}\r\n            </ul>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Main;","import React, {useCallback, useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {deleteCompleted, setErrorResponse} from \"../store/todoReducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport socket from \"../webSocket\";\r\n\r\nconst Footer = () => {\r\n\r\n    let {countOfActiveTasks} = useSelector(state => state.toDo);\r\n    let dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        socket.on('completed:wasDeleted', ({success, ...data}) => {\r\n            success\r\n                ? dispatch(deleteCompleted())\r\n                : dispatch(setErrorResponse({error: data.message}));\r\n        })\r\n    }, [dispatch]);\r\n\r\n    const completeAll = useCallback(() => {\r\n        socket.emit('completed:delete');\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <footer className=\"footer\">\r\n            <span className=\"todo-count\"><strong>{countOfActiveTasks}</strong> item left</span>\r\n            <ul className=\"filters\">\r\n                <li>\r\n                    <NavLink activeClassName=\"selected\" to='/todo'>All</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink activeClassName=\"selected\" to='/active'>Active</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink activeClassName=\"selected\" to='/completed'>Completed</NavLink>\r\n                </li>\r\n            </ul>\r\n            <button className=\"clear-completed\"\r\n                    onClick={completeAll}\r\n            >Clear completed\r\n            </button>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import {combineReducers, configureStore, getDefaultMiddleware} from '@reduxjs/toolkit'\r\nimport {toDoSlice} from \"./todoReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    toDo: toDoSlice.reducer,\r\n});\r\n\r\nconst middleware = getDefaultMiddleware({thunk: true})\r\n\r\nexport const store = configureStore({\r\n    reducer: rootReducer,\r\n    middleware\r\n});\r\n\r\n\r\nwindow.store = store;\r\n","import React, {useCallback, useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {addItem, changeLastTask, setErrorResponse} from \"../store/todoReducer\";\r\nimport s from './Header.module.css';\r\nimport socket from \"../webSocket\";\r\n\r\nconst Header = () => {\r\n    const {lastTask, error} = useSelector(state => state.toDo);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        socket.on('newTodo:wasChanged', ({task, success, ...data}) => {\r\n            success\r\n                ? dispatch(changeLastTask({task}))\r\n                : dispatch(setErrorResponse({error: data.message}));\r\n        });\r\n\r\n        socket.on('newTodo:wasAdded', ({success, task, ...data}) => {\r\n            success\r\n                ? dispatch(addItem({task}))\r\n                : dispatch(setErrorResponse({error: data.message}));\r\n        })\r\n    }, [dispatch]);\r\n\r\n    const onKey = useCallback(e => {\r\n        if (e.key === \"Enter\") socket.emit('newTodo:add', lastTask)\r\n    }, [dispatch, lastTask]);\r\n\r\n    const Input = useCallback(e => {\r\n        socket.emit('newTodo:change', {task: e.target.value});\r\n    }, [dispatch]);\r\n\r\n    return <header className={`header ${s.header}`}>\r\n        <h1>todos</h1>\r\n        {error && <p className={s.error}>Server error: {error}</p>}\r\n        <input className=\"new-todo\"\r\n               placeholder=\"What needs to be done?\"\r\n               value={lastTask}\r\n               onInput={Input}\r\n               onKeyPress={onKey}\r\n               autoFocus\r\n        />\r\n    </header>\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport './css/index.css';\r\nimport './css/base.css';\r\nimport Main from \"./components/Main\";\r\nimport Footer from \"./components/Footer\";\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./store\";\r\nimport Header from \"./components/Header\";\r\n\r\n\r\nconst App = () => {\r\n    return <section className=\"todoapp\">\r\n        <Header/>\r\n        <Route path={'/:filter(active|all|completed|todo)?/:num?/:edit?'} render={() => <Main/>}/>\r\n        <Footer/>\r\n    </section>\r\n}\r\n\r\nconst MainApp = () => {\r\n    return <Router>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </Router>\r\n}\r\n\r\nexport default MainApp;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport MainApp from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <MainApp/>,\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Header_error__3M402\",\"header\":\"Header_header__38kUd\"};"],"sourceRoot":""}