{"version":3,"sources":["store/todoReducer.js","components/Item.jsx","components/Main.jsx","components/Footer.jsx","store/index.js","components/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["toDoSlice","createSlice","name","initialState","list","lastTask","localStorage","JSON","parse","countOfActiveTasks","filter","filterResult","reducers","setTodos","state","action","payload","e","status","length","changeItemStatus","element","findIndex","id","changeEditing","case","editing","changeItemTask","task","addItem","push","deleteItem","deleteCompleted","changeLastTask","completedAll","every","item","some","forEach","changeFilter","el","getUsersTC","editingMode","dispatch","fetch","method","headers","then","res","json","data","resultCode","actions","Item","changeEditingCall","changeItemStatusCall","deleteItemCall","changeItemTaskCall","useCallback","currentTarget","value","changeEditingBlurCase","input","React","createRef","useEffect","current","focus","className","undefined","onDoubleClick","type","checked","onChange","onClick","onInput","onBlur","ref","Main","useSelector","toDo","useDispatch","useParams","num","edit","Number","completedAllCall","itemCase","body","stringify","changeStatusTC","htmlFor","map","Footer","activeClassName","to","exact","rootReducer","combineReducers","reducer","middleware","getDefaultMiddleware","thunk","store","configureStore","subscribe","getState","window","Header","onKey","key","Input","target","placeholder","onKeyPress","autoFocus","App","path","render","MainApp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6b0a5af.chunk.js","sourcesContent":["import {createSlice} from '@reduxjs/toolkit'\n\nexport const toDoSlice = createSlice({\n    name: 'list',\n    initialState:\n        {\n            list: [],\n            lastTask: localStorage['lastTodo']\n            ? JSON.parse(localStorage['lastTodo']) : '',\n            countOfActiveTasks: 0,\n            filter: 'all',\n            filterResult: []\n        },\n    reducers: {\n        setTodos: (state, action) => {\n            state.list = action.payload.list;\n            state.filterResult = action.payload.list;\n            state.countOfActiveTasks = action.payload.list.filter(e => e.status === 'active').length;\n        },\n        changeItemStatus: (state, action) => {\n            let element = state.list.findIndex(e => e.id === action.payload.id);\n            state.list[element].status === 'active'\n                ? state.list[element].status = 'completed'\n                : state.list[element].status = 'active';\n            state.countOfActiveTasks = state.list.filter(e => e.status === 'active').length;\n            state.filterResult = state.list;\n            state.filter = 'all';\n        },\n        changeEditing: (state, action) => {\n            let element = state.list.findIndex(e => e.id === action.payload.id);\n            action.payload.case === false\n                ? state.list[element].editing = false\n                :\n                state.list[element].editing = !state.list[element].editing;\n            state.filterResult = state.list;\n        },\n        changeItemTask: (state, action) => {\n            let element = state.list.findIndex(e => e.id === action.payload.id);\n            state.list[element].task = action.payload.task;\n            state.filterResult = state.list;\n        },\n        addItem: (state) => {\n            if (state.lastTask !== '') {\n                let id = state.list.length > 0 ? state.list[state.list.length - 1].id + 1 : 1;\n                state.list.push({id: id, task: state.lastTask, status: 'active', editing: false});\n                state.lastTask = '';\n                state.countOfActiveTasks += 1;\n                state.filterResult = state.list;\n                state.filter = 'all';\n            }\n        },\n        deleteItem: (state, action) => {\n            state.list = state.list.filter(e => e.id !== action.payload.id);\n            state.countOfActiveTasks = state.list.filter(e => e.status === 'active').length;\n            state.filterResult = state.list;\n            state.filter = 'all';\n        },\n        deleteCompleted: state => {\n            state.list = state.list.filter(e => e.status !== 'completed');\n            state.filterResult = state.list;\n        },\n        changeLastTask: (state, action) => {\n            state.lastTask = action.payload.task;\n        },\n        completedAll: state => {\n            if (state.list.every(item => item.status === 'active') ||\n                state.list.some(item => item.status === 'active')) {\n                state.list.forEach((item) => {\n                    item.status = 'completed';\n                });\n                state.countOfActiveTasks = 0;\n            } else {\n                state.list.forEach((item) => {\n                    item.status = 'active';\n                });\n                state.countOfActiveTasks = state.list.length;\n            }\n            state.filterResult = state.list;\n        },\n        changeFilter: (state, action) => {\n            switch (action.payload.filter) {\n                case 'all' :\n                    state.filterResult = state.list;\n                    state.filter = 'all';\n                    state.countOfActiveTasks = state.list.filter(el => el.status === 'active').length;\n                    break;\n                case 'active' :\n                    state.filterResult = state.list.filter(el => el.status !== 'completed');\n                    state.filter = 'active';\n                    state.countOfActiveTasks = state.list.filter(el => el.status === 'active').length;\n                    break;\n                case 'completed' :\n                    state.filterResult = state.list.filter(el => el.status !== 'active');\n                    state.filter = 'completed';\n                    state.countOfActiveTasks = state.list.filter(el => el.status === 'active').length;\n                    break;\n                case 'item' :\n                    state.filterResult = state.list.filter(el => el.id === action.payload.id);\n                    state.filter = 'all';\n                    state.countOfActiveTasks = state.list.filter(el => el.status === 'active').length;\n                    break;\n                default:\n                    return;\n            }\n        }\n    }\n});\n\nexport const getUsersTC = (filter, id = null, editingMode = null) => (dispatch) => {\n    fetch('/api/all',\n        {\n            method: 'GET',\n            headers: {'X-Request-With': 'XMLHttpRequest'}\n        })\n        .then(res => res.json())\n        .then(data => {\n            if (data.resultCode === 0) {\n                dispatch(setTodos({list: data.list}));\n                dispatch(changeFilter({filter, id}));\n                if (editingMode) {\n                    dispatch(changeEditing({id}))\n                }\n            }\n    });\n}\n\nexport const completeAllTC = () => (dispatch) => {\n    fetch('/api/completeAll',\n        {\n            method: 'GET',\n            headers: {'X-Request-With': 'XMLHttpRequest'}\n        })\n        .then(res => res.json())\n        .then(data => {\n            if (data.resultCode === 0)  dispatch(completedAll());\n    });\n}\n\nexport const changeStatusTC = (id) => (dispatch) => {\n    fetch('/api/changeTodo',\n        {\n            method: 'PUT',\n            headers: {'X-Request-With': 'XMLHttpRequest',\n                \"Content-Type\": \"application/json\"},\n            body: JSON.stringify({id})\n        })\n        .then(res => res.json())\n        .then(data => {\n            if (data.resultCode === 0)  dispatch(changeItemStatus({id}));\n        });\n}\n\nexport const {\n    setTodos,\n    changeItemStatus,\n    changeItemTask,\n    changeEditing,\n    addItem,\n    deleteItem,\n    deleteCompleted,\n    changeLastTask,\n    completedAll,\n    changeFilter\n} = toDoSlice.actions\n\n\n// {\n//     \"list\": [\n//     {\"id\": 1, \"task\": \"todo1\", \"status\": \"active\", \"editing\": false},\n//     {\"id\": 2, \"task\": \"todo2\", \"status\": \"completed\", \"editing\": false},\n//     {\"id\": 3, \"task\": \"todo3\", \"status\": \"completed\", \"editing\": false}\n// ]\n// }","import React, {useCallback, useEffect} from 'react';\n\nconst Item = ({item, changeEditingCall, changeItemStatusCall, deleteItemCall, changeItemTaskCall}) => {\n\n    const changeEditing = useCallback((e) => {\n        changeEditingCall(item.id);\n    }, [changeEditingCall, item]);\n\n    const changeItemStatus = useCallback(() => {\n        changeItemStatusCall(item.id);\n    }, [changeItemStatusCall, item]);\n\n    const deleteItem = useCallback(() => {\n        deleteItemCall(item.id)\n    }, [deleteItemCall, item]);\n\n    const changeItemTask = useCallback((e) => {\n        changeItemTaskCall(item.id, e.currentTarget.value)\n    }, [changeItemTaskCall, item]);\n\n    const changeEditingBlurCase = useCallback(() => {\n        changeEditingCall(item.id, false)\n    }, [changeEditingCall, item]);\n\n    const input = React.createRef();\n    useEffect(() => {\n        if (input.current) input.current.focus();\n    }, [input]);\n\n    return <li className={item.status === 'completed'\n        ? (item.editing ? 'completed editing' : 'completed')\n        : (item.editing ? 'editing' : undefined)}\n               onDoubleClick={changeEditing}>\n        <div className=\"view\">\n            <input className=\"toggle\"\n                   type=\"checkbox\"\n                   checked={item.status === \"completed\"}\n                   onChange={changeItemStatus}\n            />\n            <label>{item.task}</label>\n            <button className=\"destroy\"\n                    onClick={deleteItem}\n            >\n            </button>\n        </div>\n        <input className=\"edit\"\n               value={item.task}\n               onInput={changeItemTask}\n               onBlur={changeEditingBlurCase}\n               ref={input}/>\n    </li>\n}\n\nexport default Item;","import React, {useCallback, useEffect} from 'react';\nimport {\n    changeEditing,\n    changeItemTask,\n    changeStatusTC,\n    completeAllTC,\n    deleteItem,\n    getUsersTC\n} from \"../store/todoReducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useParams} from 'react-router-dom';\nimport Item from \"./Item\";\n\nconst Main = () => {\n    const {filterResult} = useSelector(state => state.toDo);\n    const dispatch = useDispatch();\n\n    const {filter, num, edit} = useParams();\n\n    useEffect(() => {\n        switch (filter) {\n            case 'todo':\n                if (num && !edit) {\n                    dispatch(getUsersTC('item', Number(num)));\n                } else if (num && edit) {\n                    dispatch(getUsersTC('item', Number(num), true));\n                } else {\n                    dispatch(getUsersTC('all'));\n                }\n                break;\n            case undefined:\n                dispatch(getUsersTC('all'));\n                break;\n            default:\n                dispatch(getUsersTC(filter));\n        }\n    }, [dispatch, edit, num, filter])\n\n    const completedAllCall = useCallback(() => {\n        dispatch(completeAllTC());\n    }, [dispatch]);\n\n    const changeEditingCall = useCallback((id, itemCase) => {\n        dispatch(changeEditing({id, case: itemCase}));\n    }, [dispatch]);\n\n    const changeItemStatusCall = useCallback((id) => {\n        dispatch(changeStatusTC(id));\n    }, [dispatch]);\n\n    const deleteItemCall = useCallback((id) => {\n        dispatch(deleteItem({id}))\n    }, [dispatch]);\n\n    const changeItemTaskCall = useCallback((id, task) => {\n        dispatch(changeItemTask({id, task}));\n    }, [dispatch]);\n\n    return (\n        <section className=\"main\">\n            <input id=\"toggle-all\"\n                   className=\"toggle-all\"\n                   type=\"checkbox\"\n                   onClick={completedAllCall}\n            />\n            <label htmlFor=\"toggle-all\"> Mark all as complete\n            </label>\n            <ul className=\"todo-list\">\n                {filterResult.map((item) => (\n                    <Item key={item.id}\n                          item={item}\n                          changeEditingCall={changeEditingCall}\n                          changeItemStatusCall={changeItemStatusCall}\n                          deleteItemCall={deleteItemCall}\n                          changeItemTaskCall={changeItemTaskCall}/>\n                ))}\n            </ul>\n        </section>\n    );\n}\n\nexport default Main;","import React from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {deleteCompleted} from \"../store/todoReducer\";\nimport {NavLink} from \"react-router-dom\";\n\nconst Footer = () => {\n\n    let {countOfActiveTasks} = useSelector(state => state.toDo);\n    let dispatch = useDispatch();\n\n    return (\n        <footer className=\"footer\">\n            <span className=\"todo-count\"><strong>{countOfActiveTasks}</strong> item left</span>\n            <ul className=\"filters\">\n                <li>\n                    <NavLink activeClassName=\"selected\" to='/' exact>All</NavLink>\n                </li>\n                <li>\n                    <NavLink activeClassName=\"selected\" to='/active' exact>Active</NavLink>\n                </li>\n                <li>\n                    <NavLink activeClassName=\"selected\" to='/completed' exact>Completed</NavLink>\n                </li>\n            </ul>\n            <button className=\"clear-completed\"\n                    onClick={() => dispatch(deleteCompleted())}>Clear completed\n            </button>\n        </footer>\n    );\n}\n\nexport default Footer;\n","import {combineReducers, configureStore, getDefaultMiddleware} from '@reduxjs/toolkit'\nimport {toDoSlice} from \"./todoReducer\";\n\nconst rootReducer = combineReducers({\n    toDo: toDoSlice.reducer,\n});\n\nconst middleware = getDefaultMiddleware({thunk: true})\n\nexport const store = configureStore({\n    reducer: rootReducer,\n    middleware\n});\n\nstore.subscribe(() => {\n    localStorage['lastTodo'] = JSON.stringify(store.getState().toDo.lastTask);\n})\n\n\nwindow.store = store;\n","import React, {useCallback} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {addItem, changeLastTask} from \"../store/todoReducer\";\n\nconst Header = () => {\n    const {lastTask} = useSelector(state => state.toDo);\n    const dispatch = useDispatch();\n\n    const onKey = useCallback(e => {\n        if (e.key === \"Enter\") dispatch(addItem());\n    }, [dispatch]);\n\n    const Input = useCallback(e => {\n        dispatch(changeLastTask({task: e.target.value}));\n    }, [dispatch]);\n\n    return <header className=\"header\">\n        <h1>todos</h1>\n        <input className=\"new-todo\"\n               placeholder=\"What needs to be done?\"\n               value={lastTask}\n               onInput={Input}\n               onKeyPress={onKey}\n               autoFocus\n        />\n    </header>\n}\n\nexport default Header;","import React from \"react\";\nimport './css/index.css';\nimport './css/base.css';\nimport Main from \"./components/Main\";\nimport Footer from \"./components/Footer\";\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store\";\nimport Header from \"./components/Header\";\n\nconst App = () => {\n  return <section className=\"todoapp\">\n    <Header/>\n    <Route path={'/:filter?/:num?/:edit?'} render={() => <Main/>}/>\n    <Footer/>\n  </section>\n}\n\nconst MainApp = () => {\n  return <Router>\n    <Provider store={store}>\n      <Switch>\n        <App/>\n      </Switch>\n    </Provider>\n  </Router>\n}\n\nexport default MainApp;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MainApp from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n      <MainApp/>,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}