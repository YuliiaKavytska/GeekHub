{"version":3,"sources":["components/Header.module.css","store/todoReducer.js","components/Item.jsx","components/Main.jsx","components/Footer.jsx","store/index.js","components/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","toDoSlice","createSlice","name","initialState","list","lastTask","localStorage","JSON","parse","countOfActiveTasks","filter","filterResult","error","reducers","setTodos","state","action","payload","e","status","length","changeItemStatus","element","findIndex","id","changeEditing","case","editing","changeItemTask","task","addItem","push","deleteItem","deleteCompleted","changeLastTask","completedAll","every","item","some","forEach","changeFilter","el","setErrorResponse","getUsersTC","editingMode","dispatch","ajax","then","response","resultPromise","json","data","message","url","method","body","settings","headers","Object","keys","stringify","fetch","actions","Item","changeEditingCall","changeItemStatusCall","deleteItemCall","changeItemTaskCall","input","React","createRef","useCallback","currentTarget","value","changeEditingBlurCase","useEffect","current","focus","className","undefined","onDoubleClick","type","checked","onChange","onClick","onInput","onBlur","ref","Main","useSelector","toDo","useDispatch","useParams","num","edit","Number","completedAllCall","itemCase","changeTodoTC","changeStatusTC","deleteTodoTC","htmlFor","map","Footer","completeAll","activeClassName","to","rootReducer","combineReducers","reducer","middleware","getDefaultMiddleware","thunk","store","configureStore","subscribe","getState","window","Header","onKey","key","addNewTodoTC","Input","target","s","header","placeholder","onKeyPress","autoFocus","App","path","render","MainApp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"oFACAA,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,OAAS,yB,uKCC5CC,EAAYC,YAAY,CACjCC,KAAM,OACNC,aACI,CACIC,KAAM,GACNC,SAAUC,aAAY,SAChBC,KAAKC,MAAMF,aAAY,UAAgB,GAC7CG,mBAAoB,EACpBC,OAAQ,MACRC,aAAc,GACdC,MAAO,MAEfC,SAAU,CACNC,SAAU,SAACC,EAAOC,GACdD,EAAMX,KAAOY,EAAOC,QAAQb,KAC5BW,EAAMJ,aAAeK,EAAOC,QAAQb,KACpCW,EAAMN,mBAAqBO,EAAOC,QAAQb,KAAKM,QAAO,SAAAQ,GAAC,MAAiB,WAAbA,EAAEC,UAAqBC,OAClFL,EAAMH,MAAQ,MAElBS,iBAAkB,SAACN,EAAOC,GACtB,IAAIM,EAAUP,EAAMX,KAAKmB,WAAU,SAAAL,GAAC,OAAIA,EAAEM,KAAOR,EAAOC,QAAQO,MACjC,WAA/BT,EAAMX,KAAKkB,GAASH,OACdJ,EAAMX,KAAKkB,GAASH,OAAS,YAC7BJ,EAAMX,KAAKkB,GAASH,OAAS,SACnCJ,EAAMN,mBAAqBM,EAAMX,KAAKM,QAAO,SAAAQ,GAAC,MAAiB,WAAbA,EAAEC,UAAqBC,OACzEL,EAAMJ,aAAeI,EAAMX,KAC3BW,EAAML,OAAS,MACfK,EAAMH,MAAQ,MAElBa,cAAe,SAACV,EAAOC,GACnB,IAAIM,EAAUP,EAAMX,KAAKmB,WAAU,SAAAL,GAAC,OAAIA,EAAEM,KAAOR,EAAOC,QAAQO,OACxC,IAAxBR,EAAOC,QAAQS,KACTX,EAAMX,KAAKkB,GAASK,SAAU,EAEhCZ,EAAMX,KAAKkB,GAASK,SAAWZ,EAAMX,KAAKkB,GAASK,QACvDZ,EAAMJ,aAAeI,EAAMX,MAE/BwB,eAAgB,SAACb,EAAOC,GACpB,IAAIM,EAAUP,EAAMX,KAAKmB,WAAU,SAAAL,GAAC,OAAIA,EAAEM,KAAOR,EAAOC,QAAQO,MAChET,EAAMX,KAAKkB,GAASO,KAAOb,EAAOC,QAAQY,KAC1Cd,EAAMJ,aAAeI,EAAMX,KAC3BW,EAAMH,MAAQ,MAElBkB,QAAS,SAACf,GACN,GAAuB,KAAnBA,EAAMV,SAAiB,CACvB,IAAImB,EAAKT,EAAMX,KAAKgB,OAAS,EAAIL,EAAMX,KAAKW,EAAMX,KAAKgB,OAAS,GAAGI,GAAK,EAAI,EAC5ET,EAAMX,KAAK2B,KAAK,CAACP,GAAIA,EAAIK,KAAMd,EAAMV,SAAUc,OAAQ,SAAUQ,SAAS,IAC1EZ,EAAMV,SAAW,GACjBU,EAAMN,oBAAsB,EAC5BM,EAAMJ,aAAeI,EAAMX,KAC3BW,EAAML,OAAS,MAEnBK,EAAMH,MAAQ,MAElBoB,WAAY,SAACjB,EAAOC,GAChBD,EAAMX,KAAOW,EAAMX,KAAKM,QAAO,SAAAQ,GAAC,OAAIA,EAAEM,KAAOR,EAAOC,QAAQO,MAC5DT,EAAMN,mBAAqBM,EAAMX,KAAKM,QAAO,SAAAQ,GAAC,MAAiB,WAAbA,EAAEC,UAAqBC,OACzEL,EAAMJ,aAAeI,EAAMX,KAC3BW,EAAML,OAAS,MACfK,EAAMH,MAAQ,MAElBqB,gBAAiB,SAAAlB,GACbA,EAAMX,KAAOW,EAAMX,KAAKM,QAAO,SAAAQ,GAAC,MAAiB,cAAbA,EAAEC,UACtCJ,EAAMJ,aAAeI,EAAMX,KAC3BW,EAAMH,MAAQ,MAElBsB,eAAgB,SAACnB,EAAOC,GACpBD,EAAMV,SAAWW,EAAOC,QAAQY,MAEpCM,aAAc,SAAApB,GACNA,EAAMX,KAAKgC,OAAM,SAAAC,GAAI,MAAoB,WAAhBA,EAAKlB,WAC9BJ,EAAMX,KAAKkC,MAAK,SAAAD,GAAI,MAAoB,WAAhBA,EAAKlB,WAC7BJ,EAAMX,KAAKmC,SAAQ,SAACF,GAChBA,EAAKlB,OAAS,eAElBJ,EAAMN,mBAAqB,IAE3BM,EAAMX,KAAKmC,SAAQ,SAACF,GAChBA,EAAKlB,OAAS,YAElBJ,EAAMN,mBAAqBM,EAAMX,KAAKgB,QAE1CL,EAAMJ,aAAeI,EAAMX,KAC3BW,EAAMH,MAAQ,MAElB4B,aAAc,SAACzB,EAAOC,GAClB,OAAQA,EAAOC,QAAQP,QACnB,IAAK,MACDK,EAAMJ,aAAeI,EAAMX,KAC3BW,EAAML,OAAS,MACf,MACJ,IAAK,SACDK,EAAMJ,aAAeI,EAAMX,KAAKM,QAAO,SAAA+B,GAAE,MAAkB,cAAdA,EAAGtB,UAChDJ,EAAML,OAAS,SACf,MACJ,IAAK,YACDK,EAAMJ,aAAeI,EAAMX,KAAKM,QAAO,SAAA+B,GAAE,MAAkB,WAAdA,EAAGtB,UAChDJ,EAAML,OAAS,YACf,MACJ,IAAK,OACDK,EAAMJ,aAAeI,EAAMX,KAAKM,QAAO,SAAA+B,GAAE,OAAIA,EAAGjB,KAAOR,EAAOC,QAAQO,MACtET,EAAML,OAAS,MACf,MACJ,QACI,OAERK,EAAMN,mBAAqBM,EAAMX,KAAKM,QAAO,SAAA+B,GAAE,MAAkB,WAAdA,EAAGtB,UAAqBC,OAC3EL,EAAMH,MAAQ,MAElB8B,iBAAkB,SAAC3B,EAAOC,GACtBD,EAAMH,MAAQI,EAAOC,QAAQL,UAK5B+B,EAAa,SAACjC,GAAD,IAASc,EAAT,uDAAc,KAAMoB,EAApB,uDAAkC,KAAlC,OAA2C,SAACC,GAClEC,EAAK,WAAY,OAAOC,MAAK,SAAAC,GACzB,IAAMC,EAAgBD,EAASE,OACP,MAApBF,EAAS7B,OACT8B,EAAcF,MAAK,SAAAI,GACfN,EAAS/B,EAAS,CAACV,KAAM+C,EAAK/C,QAC9ByC,EAASL,EAAa,CAAC9B,SAAQc,QAC3BoB,GAAaC,EAASpB,EAAc,CAACD,WAG7CyB,EAAcF,MAAK,SAAAI,GACfN,EAASH,EAAiB,CAAC9B,MAAOuC,EAAKC,mBAoFnDN,EAAO,SAACO,EAAKC,GAAuB,IAAfC,EAAc,uDAAP,GACxBC,EAAW,CACXF,SACAG,QAAS,CAAC,mBAAoB,iBAAkB,eAAgB,qBAKpE,OAHiC,IAA7BC,OAAOC,KAAKJ,GAAMnC,SAClBoC,EAAQ,KAAWjD,KAAKqD,UAAUL,IAE/BM,MAAMR,EAAKG,I,EAelBxD,EAAU8D,QAXVhD,E,EAAAA,SACAO,E,EAAAA,iBACAO,E,EAAAA,eACAH,E,EAAAA,cACAK,E,EAAAA,QACAE,E,EAAAA,WACAC,E,EAAAA,gBACAC,E,EAAAA,eACAC,E,EAAAA,aACAK,E,EAAAA,aACAE,E,EAAAA,iB,qBCrLWqB,EAnDF,SAAC,GAAyF,IAAxF1B,EAAuF,EAAvFA,KAAM2B,EAAiF,EAAjFA,kBAAmBC,EAA8D,EAA9DA,qBAAsBC,EAAwC,EAAxCA,eAAgBC,EAAwB,EAAxBA,mBAEpEC,EAAQC,IAAMC,YAEd7C,EAAgB8C,uBAAY,SAACrD,GAC/B8C,EAAkB3B,EAAKb,GAAI,KAAMN,EAAEsD,cAAcC,MAAOpC,EAAKV,WAC9D,CAACqC,EAAmB3B,IAEjBhB,EAAmBkD,uBAAY,WACjCN,EAAqB5B,EAAKb,MAC3B,CAACyC,EAAsB5B,IAEpBL,EAAauC,uBAAY,WAC3BL,EAAe7B,EAAKb,MACrB,CAAC0C,EAAgB7B,IAEdT,EAAiB2C,uBAAY,SAACrD,GAChCiD,EAAmB9B,EAAKb,GAAIN,EAAEsD,cAAcC,SAC7C,CAACN,EAAoB9B,IAElBqC,EAAwBH,uBAAY,SAACrD,GACvC8C,EAAkB3B,EAAKb,IAAI,EAAON,EAAEsD,cAAcC,MAAOpC,EAAKV,WAC/D,CAACqC,EAAmB3B,IAMvB,OAJAsC,qBAAU,WACFP,EAAMQ,SAASR,EAAMQ,QAAQC,UAClC,CAACT,IAEG,qBAAIU,UAA2B,cAAhBzC,EAAKlB,OACpBkB,EAAKV,QAAU,oBAAsB,YACrCU,EAAKV,QAAU,eAAYoD,EACvBC,cAAevD,EAHnB,UAIH,sBAAKqD,UAAU,OAAf,UACI,uBAAOA,UAAU,SACVG,KAAK,WACLC,QAAyB,cAAhB7C,EAAKlB,OACdgE,SAAU9D,IAEjB,gCAAQgB,EAAKR,OACb,wBAAQiD,UAAU,UACVM,QAASpD,OAGrB,uBAAO8C,UAAU,OACVL,MAAOpC,EAAKR,KACZwD,QAASzD,EACT0D,OAAQZ,EACRa,IAAKnB,QCkCLoB,EAtEF,WAAO,IACT7E,EAAgB8E,aAAY,SAAA1E,GAAK,OAAIA,EAAM2E,QAA3C/E,aACDkC,EAAW8C,cAFF,EAIaC,cAArBlF,EAJQ,EAIRA,OAAQmF,EAJA,EAIAA,IAAKC,EAJL,EAIKA,KAEpBnB,qBAAU,WACN,OAAQjE,GACJ,IAAK,OAEGmC,EADAgD,IAAQC,EACCnD,EAAW,OAAQoD,OAAOF,IAC5BA,GAAOC,EACLnD,EAAW,OAAQoD,OAAOF,IAAM,GAEhClD,EAAW,QAExB,MACJ,UAAKoC,EACDlC,EAASF,EAAW,QACpB,MACJ,QACIE,EAASF,EAAWjC,OAE7B,CAACmC,EAAUiD,EAAMD,EAAKnF,IAEzB,IAAMsF,EAAmBzB,uBAAY,WACjC1B,GF+F2B,SAACA,GAChCC,EAAK,mBAAoB,OAAOC,MAAK,SAAAC,GACT,MAApBA,EAAS7B,OACT0B,EAASV,KAEaa,EAASE,OACjBH,MAAK,SAAAI,GACfN,EAASH,EAAiB,CAAC9B,MAAOuC,EAAKC,sBErGhD,CAACP,IAEEmB,EAAoBO,uBAAY,SAAC/C,EAAIyE,EAAUpE,EAAMF,GAEjDkB,EADNlB,EF4JoB,SAACH,EAAIyE,EAAUpE,GAAf,OAAwB,SAACgB,GACjDC,EAAK,kBAAmB,OAAQ,CAACtB,KAAIK,SAAOkB,MAAK,SAAAC,GACrB,MAApBA,EAAS7B,OACT0B,EAASpB,EAAc,CAACD,KAAIE,KAAMuE,KAEZjD,EAASE,OACjBH,MAAK,SAAAI,GACfN,EAASH,EAAiB,CAAC9B,MAAOuC,EAAKC,kBElKhC8C,CAAa1E,EAAIyE,EAAUpE,GAC3BJ,EAAc,CAACD,KAAIE,KAAMuE,OACzC,CAACpD,IAEEoB,EAAuBM,uBAAY,SAAC/C,GACtCqB,EFkGsB,SAACrB,GAAD,OAAQ,SAACqB,GACnCC,EAAK,kBAAmB,MAAO,CAACtB,OAAKuB,MAAK,SAAAC,GACd,MAApBA,EAAS7B,OACT0B,EAASxB,EAAiB,CAACG,QAELwB,EAASE,OACjBH,MAAK,SAAAI,GACfN,EAASH,EAAiB,CAAC9B,MAAOuC,EAAKC,kBEzGtC+C,CAAe3E,MACzB,CAACqB,IAEEqB,EAAiBK,uBAAY,SAAC/C,GAChCqB,EF2GoB,SAACrB,GAAD,OAAQ,SAACqB,GACjCC,EAAK,kBAAmB,SAAU,CAACtB,OAAKuB,MAAK,SAAAC,GACjB,MAApBA,EAAS7B,OACT0B,EAASb,EAAW,CAACR,QAECwB,EAASE,OACjBH,MAAK,SAAAI,GACfN,EAASH,EAAiB,CAAC9B,MAAOuC,EAAKC,kBElHtCgD,CAAa5E,MACvB,CAACqB,IAEEsB,EAAqBI,uBAAY,SAAC/C,EAAIK,GACxCgB,EAASjB,EAAe,CAACJ,KAAIK,YAC9B,CAACgB,IAEJ,OACI,0BAASiC,UAAU,OAAnB,UACI,uBAAOtD,GAAG,aACHsD,UAAU,aACVG,KAAK,WACLG,QAASY,IAEhB,uBAAOK,QAAQ,aAAf,mCAEA,oBAAIvB,UAAU,YAAd,SACKnE,EAAa2F,KAAI,SAACjE,GAAD,OACd,cAAC,EAAD,CACMA,KAAMA,EACN2B,kBAAmBA,EACnBC,qBAAsBA,EACtBC,eAAgBA,EAChBC,mBAAoBA,GALf9B,EAAKb,a,QCpCrB+E,EA9BA,WAAO,IAEb9F,EAAsBgF,aAAY,SAAA1E,GAAK,OAAIA,EAAM2E,QAAjDjF,mBACDoC,EAAW8C,cAETa,EAAcjC,uBAAY,WAC5B1B,GH+K+B,SAACA,GACpCC,EAAK,uBAAwB,UAAUC,MAAK,SAAAC,GAChB,MAApBA,EAAS7B,OACT0B,EAASZ,KAEae,EAASE,OACjBH,MAAK,SAAAI,GACfN,EAASH,EAAiB,CAAC9B,MAAOuC,EAAKC,sBGrLhD,CAACP,IAEJ,OACI,yBAAQiC,UAAU,SAAlB,UACI,uBAAMA,UAAU,aAAhB,UAA6B,iCAASrE,IAAtC,gBACA,qBAAIqE,UAAU,UAAd,UACI,6BACI,cAAC,IAAD,CAAS2B,gBAAgB,WAAWC,GAAG,QAAvC,mBAEJ,6BACI,cAAC,IAAD,CAASD,gBAAgB,WAAWC,GAAG,UAAvC,sBAEJ,6BACI,cAAC,IAAD,CAASD,gBAAgB,WAAWC,GAAG,aAAvC,4BAGR,wBAAQ5B,UAAU,kBACVM,QAASoB,EADjB,iC,OCzBNG,EAAcC,YAAgB,CAChClB,KAAM1F,EAAU6G,UAGdC,EAAaC,YAAqB,CAACC,OAAO,IAEnCC,EAAQC,YAAe,CAChCL,QAASF,EACTG,eAGJG,EAAME,WAAU,WACZ7G,aAAY,SAAeC,KAAKqD,UAAUqD,EAAMG,WAAW1B,KAAKrF,aAIpEgH,OAAOJ,MAAQA,E,qBCWAK,EAzBA,WAAO,IAAD,EACS7B,aAAY,SAAA1E,GAAK,OAAIA,EAAM2E,QAA9CrF,EADU,EACVA,SAAUO,EADA,EACAA,MACXiC,EAAW8C,cAEX4B,EAAQhD,uBAAY,SAAArD,GACR,UAAVA,EAAEsG,KAAiB3E,ELmKH,SAACxC,GAAD,OAAc,SAACwC,GACvCC,EAAK,eAAgB,OAAQ,CAACjB,KAAMxB,IAAW0C,MAAK,SAAAC,GACxB,MAApBA,EAAS7B,OACT0B,EAASf,KAEakB,EAASE,OACjBH,MAAK,SAAAI,GACfN,EAASH,EAAiB,CAAC9B,MAAOuC,EAAKC,kBK1KfqE,CAAapH,MAC9C,CAACwC,EAAUxC,IAERqH,EAAQnD,uBAAY,SAAArD,GACtB2B,EAASX,EAAe,CAACL,KAAMX,EAAEyG,OAAOlD,WACzC,CAAC5B,IAEJ,OAAO,yBAAQiC,UAAS,iBAAY8C,IAAEC,QAA/B,UACH,uCACCjH,GAAS,oBAAGkE,UAAW8C,IAAEhH,MAAhB,2BAAsCA,KAChD,uBAAOkE,UAAU,WACVgD,YAAY,yBACZrD,MAAOpE,EACPgF,QAASqC,EACTK,WAAYR,EACZS,WAAS,QCdlBC,EAAM,WACR,OAAO,0BAASnD,UAAU,UAAnB,UACH,cAAC,EAAD,IACA,cAAC,IAAD,CAAOoD,KAAM,oDAAqDC,OAAQ,kBAAM,cAAC,EAAD,OAChF,cAAC,EAAD,QAYOC,EARC,WACZ,OAAO,cAAC,IAAD,UACH,cAAC,IAAD,CAAUnB,MAAOA,EAAjB,SACI,cAAC,EAAD,SCVGoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxF,MAAK,YAAkD,IAA/CyF,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASV,OACP,eAAC,IAAMW,WAAP,WACI,cAAC,EAAD,IADJ,OAGAC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.8bf133e7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Header_error__17BVU\",\"header\":\"Header_header__3mObx\"};","import {createSlice} from '@reduxjs/toolkit'\n\nexport const toDoSlice = createSlice({\n    name: 'list',\n    initialState:\n        {\n            list: [],\n            lastTask: localStorage['lastTodo']\n                ? JSON.parse(localStorage['lastTodo']) : '',\n            countOfActiveTasks: 0,\n            filter: 'all',\n            filterResult: [],\n            error: null\n        },\n    reducers: {\n        setTodos: (state, action) => {\n            state.list = action.payload.list;\n            state.filterResult = action.payload.list;\n            state.countOfActiveTasks = action.payload.list.filter(e => e.status === 'active').length;\n            state.error = null;\n        },\n        changeItemStatus: (state, action) => {\n            let element = state.list.findIndex(e => e.id === action.payload.id);\n            state.list[element].status === 'active'\n                ? state.list[element].status = 'completed'\n                : state.list[element].status = 'active';\n            state.countOfActiveTasks = state.list.filter(e => e.status === 'active').length;\n            state.filterResult = state.list;\n            state.filter = 'all';\n            state.error = null;\n        },\n        changeEditing: (state, action) => {\n            let element = state.list.findIndex(e => e.id === action.payload.id);\n            action.payload.case === false\n                ? state.list[element].editing = false\n                :\n                state.list[element].editing = !state.list[element].editing;\n            state.filterResult = state.list;\n        },\n        changeItemTask: (state, action) => {\n            let element = state.list.findIndex(e => e.id === action.payload.id);\n            state.list[element].task = action.payload.task;\n            state.filterResult = state.list;\n            state.error = null;\n        },\n        addItem: (state) => {\n            if (state.lastTask !== '') {\n                let id = state.list.length > 0 ? state.list[state.list.length - 1].id + 1 : 1;\n                state.list.push({id: id, task: state.lastTask, status: 'active', editing: false});\n                state.lastTask = '';\n                state.countOfActiveTasks += 1;\n                state.filterResult = state.list;\n                state.filter = 'all';\n            }\n            state.error = null;\n        },\n        deleteItem: (state, action) => {\n            state.list = state.list.filter(e => e.id !== action.payload.id);\n            state.countOfActiveTasks = state.list.filter(e => e.status === 'active').length;\n            state.filterResult = state.list;\n            state.filter = 'all';\n            state.error = null;\n        },\n        deleteCompleted: state => {\n            state.list = state.list.filter(e => e.status !== 'completed');\n            state.filterResult = state.list;\n            state.error = null;\n        },\n        changeLastTask: (state, action) => {\n            state.lastTask = action.payload.task;\n        },\n        completedAll: state => {\n            if (state.list.every(item => item.status === 'active') ||\n                state.list.some(item => item.status === 'active')) {\n                state.list.forEach((item) => {\n                    item.status = 'completed';\n                });\n                state.countOfActiveTasks = 0;\n            } else {\n                state.list.forEach((item) => {\n                    item.status = 'active';\n                });\n                state.countOfActiveTasks = state.list.length;\n            }\n            state.filterResult = state.list;\n            state.error = null;\n        },\n        changeFilter: (state, action) => {\n            switch (action.payload.filter) {\n                case 'all' :\n                    state.filterResult = state.list;\n                    state.filter = 'all';\n                    break;\n                case 'active' :\n                    state.filterResult = state.list.filter(el => el.status !== 'completed');\n                    state.filter = 'active';\n                    break;\n                case 'completed' :\n                    state.filterResult = state.list.filter(el => el.status !== 'active');\n                    state.filter = 'completed';\n                    break;\n                case 'item' :\n                    state.filterResult = state.list.filter(el => el.id === action.payload.id);\n                    state.filter = 'all';\n                    break;\n                default:\n                    return;\n            }\n            state.countOfActiveTasks = state.list.filter(el => el.status === 'active').length;\n            state.error = null;\n        },\n        setErrorResponse: (state, action) => {\n            state.error = action.payload.error;\n        }\n    }\n});\n\nexport const getUsersTC = (filter, id = null, editingMode = null) => (dispatch) => {\n    ajax('/api/all', 'GET').then(response => {\n        const resultPromise = response.json();\n        if (response.status === 200) {\n            resultPromise.then(data => {\n                dispatch(setTodos({list: data.list}));\n                dispatch(changeFilter({filter, id}));\n                if (editingMode) dispatch(changeEditing({id}))\n            })\n        } else {\n            resultPromise.then(data =>{\n                dispatch(setErrorResponse({error: data.message}));\n            })\n        }\n    });\n}\n\nexport const completeAllTC = () => (dispatch) => {\n    ajax('/api/completeAll', 'GET').then(response => {\n        if (response.status === 200) {\n            dispatch(completedAll());\n        } else {\n            const resultPromise = response.json();\n            resultPromise.then(data =>{\n                dispatch(setErrorResponse({error: data.message}));\n            })\n        }\n    });\n}\n\nexport const changeStatusTC = (id) => (dispatch) => {\n    ajax('/api/changeTodo', 'PUT', {id}).then(response => {\n        if (response.status === 200) {\n            dispatch(changeItemStatus({id}));\n        } else {\n            const resultPromise = response.json();\n            resultPromise.then(data =>{\n                dispatch(setErrorResponse({error: data.message}));\n            })\n        }\n    });\n}\n\nexport const deleteTodoTC = (id) => (dispatch) => {\n    ajax('/api/changeTodo', 'DELETE', {id}).then(response => {\n        if (response.status === 200) {\n            dispatch(deleteItem({id}));\n        } else {\n            const resultPromise = response.json();\n            resultPromise.then(data =>{\n                dispatch(setErrorResponse({error: data.message}));\n            })\n        }\n    });\n}\n\nexport const addNewTodoTC = (lastTask) => (dispatch) => {\n    ajax('/api/newTodo', 'POST', {task: lastTask}).then(response => {\n        if (response.status === 200) {\n            dispatch(addItem());\n        } else {\n            const resultPromise = response.json();\n            resultPromise.then(data =>{\n                dispatch(setErrorResponse({error: data.message}));\n            })\n        }\n    });\n}\n\nexport const deleteCompletedTC = () => (dispatch) => {\n    ajax('/api/deleteCompleted', 'DELETE').then(response => {\n        if (response.status === 200) {\n            dispatch(deleteCompleted());\n        } else {\n            const resultPromise = response.json();\n            resultPromise.then(data =>{\n                dispatch(setErrorResponse({error: data.message}));\n            })\n        }\n    });\n}\n\nexport const changeTodoTC = (id, itemCase, task) => (dispatch) => {\n    ajax('/api/changeTodo', 'POST', {id, task}).then(response => {\n        if (response.status === 200) {\n            dispatch(changeEditing({id, case: itemCase}));\n        } else {\n            const resultPromise = response.json();\n            resultPromise.then(data =>{\n                dispatch(setErrorResponse({error: data.message}));\n            })\n        }\n    });\n}\n\nlet ajax = (url, method, body = {}) => {\n    let settings = {\n        method,\n        headers: {\"X-Requested-With\": \"XMLHttpRequest\", \"Content-Type\": \"application/json\"}\n    }\n    if (Object.keys(body).length !== 0) {\n        settings['body'] = JSON.stringify(body)\n    }\n    return fetch(url, settings);\n}\n\nexport const {\n    setTodos,\n    changeItemStatus,\n    changeItemTask,\n    changeEditing,\n    addItem,\n    deleteItem,\n    deleteCompleted,\n    changeLastTask,\n    completedAll,\n    changeFilter,\n    setErrorResponse\n} = toDoSlice.actions\n","import React, {useCallback, useEffect} from 'react';\n\nconst Item = ({item, changeEditingCall, changeItemStatusCall, deleteItemCall, changeItemTaskCall}) => {\n\n    const input = React.createRef();\n\n    const changeEditing = useCallback((e) => {\n        changeEditingCall(item.id, null, e.currentTarget.value, item.editing);\n    }, [changeEditingCall, item]);\n\n    const changeItemStatus = useCallback(() => {\n        changeItemStatusCall(item.id);\n    }, [changeItemStatusCall, item]);\n\n    const deleteItem = useCallback(() => {\n        deleteItemCall(item.id)\n    }, [deleteItemCall, item]);\n\n    const changeItemTask = useCallback((e) => {\n        changeItemTaskCall(item.id, e.currentTarget.value)\n    }, [changeItemTaskCall, item]);\n\n    const changeEditingBlurCase = useCallback((e) => {\n        changeEditingCall(item.id, false, e.currentTarget.value, item.editing)\n    }, [changeEditingCall, item]);\n\n    useEffect(() => {\n        if (input.current) input.current.focus();\n    }, [input]);\n\n    return <li className={item.status === 'completed'\n        ? (item.editing ? 'completed editing' : 'completed')\n        : (item.editing ? 'editing' : undefined)}\n               onDoubleClick={changeEditing}>\n        <div className=\"view\">\n            <input className=\"toggle\"\n                   type=\"checkbox\"\n                   checked={item.status === \"completed\"}\n                   onChange={changeItemStatus}\n            />\n            <label>{item.task}</label>\n            <button className=\"destroy\"\n                    onClick={deleteItem}>\n            </button>\n        </div>\n        <input className=\"edit\"\n               value={item.task}\n               onInput={changeItemTask}\n               onBlur={changeEditingBlurCase}\n               ref={input}/>\n    </li>\n}\n\nexport default Item;","import React, {useCallback, useEffect} from 'react';\nimport {\n    changeEditing,\n    changeItemTask,\n    changeStatusTC, changeTodoTC,\n    completeAllTC,\n    deleteTodoTC,\n    getUsersTC\n} from \"../store/todoReducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useParams} from 'react-router-dom';\nimport Item from \"./Item\";\n\nconst Main = () => {\n    const {filterResult} = useSelector(state => state.toDo);\n    const dispatch = useDispatch();\n\n    const {filter, num, edit} = useParams();\n\n    useEffect(() => {\n        switch (filter) {\n            case 'todo':\n                if (num && !edit) {\n                    dispatch(getUsersTC('item', Number(num)));\n                } else if (num && edit) {\n                    dispatch(getUsersTC('item', Number(num), true));\n                } else {\n                    dispatch(getUsersTC('all'));\n                }\n                break;\n            case undefined:\n                dispatch(getUsersTC('all'));\n                break;\n            default:\n                dispatch(getUsersTC(filter));\n        }\n    }, [dispatch, edit, num, filter])\n\n    const completedAllCall = useCallback(() => {\n        dispatch(completeAllTC());\n    }, [dispatch]);\n\n    const changeEditingCall = useCallback((id, itemCase, task, editing) => {\n        editing\n            ? dispatch(changeTodoTC(id, itemCase, task))\n            : dispatch(changeEditing({id, case: itemCase}));\n    }, [dispatch]);\n\n    const changeItemStatusCall = useCallback((id) => {\n        dispatch(changeStatusTC(id));\n    }, [dispatch]);\n\n    const deleteItemCall = useCallback((id) => {\n        dispatch(deleteTodoTC(id))\n    }, [dispatch]);\n\n    const changeItemTaskCall = useCallback((id, task) => {\n        dispatch(changeItemTask({id, task}));\n    }, [dispatch]);\n\n    return (\n        <section className=\"main\">\n            <input id=\"toggle-all\"\n                   className=\"toggle-all\"\n                   type=\"checkbox\"\n                   onClick={completedAllCall}\n            />\n            <label htmlFor=\"toggle-all\"> Mark all as complete\n            </label>\n            <ul className=\"todo-list\">\n                {filterResult.map((item) => (\n                    <Item key={item.id}\n                          item={item}\n                          changeEditingCall={changeEditingCall}\n                          changeItemStatusCall={changeItemStatusCall}\n                          deleteItemCall={deleteItemCall}\n                          changeItemTaskCall={changeItemTaskCall}/>\n                ))}\n            </ul>\n        </section>\n    );\n}\n\nexport default Main;","import React, {useCallback} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {deleteCompletedTC} from \"../store/todoReducer\";\nimport {NavLink} from \"react-router-dom\";\n\nconst Footer = () => {\n\n    let {countOfActiveTasks} = useSelector(state => state.toDo);\n    let dispatch = useDispatch();\n\n    const completeAll = useCallback(() => {\n        dispatch(deleteCompletedTC());\n    }, [dispatch])\n\n    return (\n        <footer className=\"footer\">\n            <span className=\"todo-count\"><strong>{countOfActiveTasks}</strong> item left</span>\n            <ul className=\"filters\">\n                <li>\n                    <NavLink activeClassName=\"selected\" to='/todo'>All</NavLink>\n                </li>\n                <li>\n                    <NavLink activeClassName=\"selected\" to='/active'>Active</NavLink>\n                </li>\n                <li>\n                    <NavLink activeClassName=\"selected\" to='/completed'>Completed</NavLink>\n                </li>\n            </ul>\n            <button className=\"clear-completed\"\n                    onClick={completeAll}>Clear completed\n            </button>\n        </footer>\n    );\n}\n\nexport default Footer;\n","import {combineReducers, configureStore, getDefaultMiddleware} from '@reduxjs/toolkit'\nimport {toDoSlice} from \"./todoReducer\";\n\nconst rootReducer = combineReducers({\n    toDo: toDoSlice.reducer,\n});\n\nconst middleware = getDefaultMiddleware({thunk: true})\n\nexport const store = configureStore({\n    reducer: rootReducer,\n    middleware\n});\n\nstore.subscribe(() => {\n    localStorage['lastTodo'] = JSON.stringify(store.getState().toDo.lastTask);\n})\n\n\nwindow.store = store;\n","import React, {useCallback} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {addNewTodoTC, changeLastTask} from \"../store/todoReducer\";\nimport s from './Header.module.css';\n\nconst Header = () => {\n    const {lastTask, error} = useSelector(state => state.toDo);\n    const dispatch = useDispatch();\n\n    const onKey = useCallback(e => {\n        if (e.key === \"Enter\") dispatch(addNewTodoTC(lastTask));\n    }, [dispatch, lastTask]);\n\n    const Input = useCallback(e => {\n        dispatch(changeLastTask({task: e.target.value}));\n    }, [dispatch]);\n\n    return <header className={`header ${s.header}`}>\n        <h1>todos</h1>\n        {error && <p className={s.error}>Server error: {error}</p>}\n        <input className=\"new-todo\"\n               placeholder=\"What needs to be done?\"\n               value={lastTask}\n               onInput={Input}\n               onKeyPress={onKey}\n               autoFocus\n        />\n    </header>\n}\n\nexport default Header;","import React from \"react\";\nimport './css/index.css';\nimport './css/base.css';\nimport Main from \"./components/Main\";\nimport Footer from \"./components/Footer\";\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store\";\nimport Header from \"./components/Header\";\n\n\nconst App = () => {\n    return <section className=\"todoapp\">\n        <Header/>\n        <Route path={'/:filter(active|all|completed|todo)?/:num?/:edit?'} render={() => <Main/>}/>\n        <Footer/>\n    </section>\n}\n\nconst MainApp = () => {\n    return <Router>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </Router>\n}\n\nexport default MainApp;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MainApp from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n      <MainApp/>,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}